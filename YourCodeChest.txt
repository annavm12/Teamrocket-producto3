// days.js
import React from "react";
import { View, Text, StyleSheet } from 'react-native';

const Days = ({ data }) => {
  return (
    <View style={styles.container}>
      {data.map((day, index) => (
        <Text key={index}>{day.title}</Text>
      ))}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    // Estilos para tu componente
  }
});

export default Days;


// flatList.js
import React from 'react';
import { SafeAreaView, View, FlatList, StyleSheet, Text, StatusBar } from 'react-native';

// const DATA = [
//   {
//     id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',
//     title: 'First Item',
//   },
//   {
//     id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',
//     title: 'Second Item',
//   },
//   {
//     id: '58694a0f-3da1-471f-bd96-145571e29d72',
//     title: 'Third Item',
//   },
// ];

const Item = ({ title }) => (
  <View style={styles.item}>
    <Text style={styles.title}>{title}</Text>
  </View>
);

const FlatListDias = ({ data }) => { // Acepta data como prop
  return (
    <SafeAreaView style={styles.container}>
      <FlatList
        data={data} // Usa la data pasada como prop
        renderItem={({ item }) => <Item title={item.title} />}
        keyExtractor={item => item.id}
      />
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginTop: StatusBar.currentHeight || 0,
  },
  item: {
    backgroundColor: '#f9c2ff',
    padding: 20,
    marginVertical: 8,
    marginHorizontal: 16,
  },
  title: {
    fontSize: 32,
  },
});

export default FlatListDias;

// navegador.js



// Firebase.js
import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";


const firebaseConfig = {
    apiKey: "AIzaSyCXg6Dx-r--AYXDHgkVt07-UKK56AIOTEk",
    authDomain: "team-rocket-prod2.firebaseapp.com",
    databaseURL: "https://team-rocket-prod2-default-rtdb.europe-west1.firebasedatabase.app",
    projectId: "team-rocket-prod2",
    storageBucket: "team-rocket-prod2.appspot.com",
    messagingSenderId: "977220676190",
    appId: "1:977220676190:web:dc63c4123cb200809f22cf",
    measurementId: "G-6DE7MDL1GF"
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

export { app, db };

// HomeScreen.js
import React, { useEffect, useState } from 'react';
import { View, Text, TextInput, StyleSheet, Image, TouchableOpacity } from 'react-native';
import { Picker } from '@react-native-picker/picker';
import { collection, getDocs } from "firebase/firestore";
import { db, app } from '../utils/Firebase';
import { useNavigation } from '@react-navigation/native';
import FlatListDias from '../components/flatList';

const Homescreen = () => {
  const navigation = useNavigation();
  const handleCrearNuevoDia = () => {
    navigation.navigate('NuevoDia');
  };

  const [data, setData] = useState([]);

  useEffect(() => {
    const fetchDataFromFirebase = async () => {
      try {
        const querySnapshot = await getDocs(collection(db, "dias")); // Usar db para referenciar la colección
        const fetchedData = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        setData(fetchedData);
      } catch (error) {
        console.error('Error al obtener datos de Firebase:', error);
      }
    };

    fetchDataFromFirebase();
  }, []);

  return (
    <View style={styles.container}>
      {/* Sección del título */}
      <Text style={styles.title}>Mi Viaje por España</Text>
      <Image
        style={styles.image}
        source={require('../assets/images/logo.png')}
      />

      <View style={styles.searchContainer}>
        <Text>Buscar: </Text>
        <TextInput
          style={styles.input}
          placeholder="Escribe aquí"
        />
        <Picker>
          <Picker.Item label="Opción 1" value="opcion1" />
          <Picker.Item label="Opción 2" value="opcion2" />
          <Picker.Item label="Opción 3" value="opcion3" />
        </Picker>
      </View>

      <TouchableOpacity style={styles.button} onPress={handleCrearNuevoDia}>
        <Text style={styles.buttonText}>Crear Nuevo Día</Text>
      </TouchableOpacity>

      <FlatListDias data={data}></FlatListDias>
        
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    backgroundColor: 'white',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  searchContainer: {
    marginTop: 20,
    flexDirection: 'row',
    alignItems: 'center',
  },
  image: {
    width: 100,
    height: 100,
    marginTop: 20,
  },
  input: {
    flex: 1,
    height: 40,
    borderWidth: 1,
    marginRight: 10,
    paddingHorizontal: 10,
  },
  button: {
    marginTop: 20,
    backgroundColor: 'blue',
    padding: 10,
    borderRadius: 5,
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontWeight: 'bold',
  },
  card: {
    borderWidth: 1,
    borderColor: '#ddd',
    borderRadius: 8,
    padding: 16,
    marginVertical: 8,
    marginHorizontal: 16,
  },
});

export default Homescreen;


// NuevoDiaScreen.js
import React from 'react';
import { ScrollView, Text, TextInput, StyleSheet } from 'react-native';
import { Button } from 'react-native-paper';
import { Formik } from 'formik';

const NuevoDiaScreen = () => {
  const onSubmit = (values) => {
    console.log(values);
    // Add logic to save the data here
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.heading}>Día</Text>
      <Formik
        initialValues={{ dayNumber: '', city: '', resume: '', time: 'Mañana' }}
        onSubmit={onSubmit}
      >
        {({ handleChange, handleBlur, handleSubmit, values }) => (
          <>
            <TextInput
              style={styles.input}
              placeholder="Número de día"
              keyboardType="numeric"
              onChangeText={handleChange('dayNumber')}
              onBlur={handleBlur('dayNumber')}
              value={values.dayNumber}
            />
            {/* Add more fields according to your needs */}

            <Text style={styles.heading}>Info</Text>
            {/* Add fields for the 'Info' section similarly */}

            <Button mode="contained" onPress={handleSubmit} style={styles.button}>
              Guardar día
            </Button>
          </>
        )}
      </Formik>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 20,
  },
  heading: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  input: {
    height: 40,
    borderWidth: 1,
    marginBottom: 10,
    paddingHorizontal: 10,
  },
  button: {
    marginTop: 20,
  },
});

export default NuevoDiaScreen;


// index.js
import react from "react";
import Homescreen from "./vistas/HomeScreen";

const App = () => {
    return (
      <Homescreen />
    );
  };
  
  export default App;
  

// app.json
{
  "expo": {
    "scheme": "acme",
    "web": {
      "bundler": "metro"
    },
    "plugins": [
      "expo-router"
    ],
    "name": "PRODUCTO_3",
    "slug": "PRODUCTO_3"
  }
}


// babel.config.js
module.exports = function (api) {
  api.cache(true);
  return {
    presets: ["babel-preset-expo"],
    plugins: [
      "@babel/plugin-proposal-export-namespace-from",
      "react-native-reanimated/plugin",
      require.resolve("expo-router/babel"),
    ],
  };
};


// package.json
{
  "name": "producto_3",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web"
  },
  "dependencies": {
    "@expo/webpack-config": "^19.0.0",
    "@react-native-community/viewpager": "^5.0.11",
    "@react-native-firebase/app": "^18.7.3",
    "@react-native-firebase/firestore": "^18.7.1",
    "@react-native-picker/picker": "2.4.10",
    "@react-navigation/native": "^6.1.9",
    "@react-navigation/stack": "^6.3.20",
    "axios": "^1.6.2",
    "expo": "^49.0.3",
    "expo-constants": "~14.4.2",
    "expo-font": "~11.4.0",
    "expo-linking": "~5.0.2",
    "expo-router": "^2.0.14",
    "expo-splash-screen": "~0.20.4",
    "expo-status-bar": "~1.6.0",
    "firebase": "^10.7.0",
    "formik": "^1.5.8",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hook-form": "^7.49.2",
    "react-native": "0.72.6",
    "react-native-dotenv": "^3.4.9",
    "react-native-formik": "^1.7.8",
    "react-native-gesture-handler": "~2.12.0",
    "react-native-paper": "^5.11.4",
    "react-native-reanimated": "~3.3.0",
    "react-native-safe-area-context": "^4.6.3",
    "react-native-screens": "~3.22.0",
    "react-native-web": "~0.19.6",
    "react-navigation": "^5.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.19.3",
    "@babel/plugin-proposal-export-namespace-from": "^7.18.9"
  },
  "resolutions": {
    "metro": "^0.73.7",
    "metro-resolver": "^0.73.7"
  },
  "overrides": {
    "metro": "^0.73.7",
    "metro-resolver": "^0.73.7"
  },
  "private": true
}


